import pytest


@pytest.fixture(autouse=True)
def _test_files(mkdocs):
    mkdocs.files(
        """
        mkdocs.yml
        | site_name: Test
        | plugins:
        |   - awesome-nav
        |   - monorepo
        | nav:
        |   - sub: '!include ./sub/mkdocs.yml'
        """
    )


def test_default_nav(mkdocs, logs):
    mkdocs.files(
        """
        docs/
            foo.md
        sub/
            docs/
                bar.md
            mkdocs.yml
            | site_name: sub
        """
    )

    mkdocs.build().assert_nav(
        """
        - Foo: foo.md
        - Sub:
            - Bar: sub/bar.md
        """
    )

    assert logs.from_plugin == [
        logs.warning("awesome-nav: 'nav' config from mkdocs.yml is being replaced with one generated by awesome-nav")
    ]


def test_nav_in_root(mkdocs, logs):
    mkdocs.files(
        """
        docs/
            foo.md
            .nav.yml
            | nav:
            |   - Title: sub
            |   - foo.md
        sub/
            docs/
                bar.md
            mkdocs.yml
            | site_name: sub
        """
    )

    mkdocs.build().assert_nav(
        """
        - Title:
            - Bar: sub/bar.md
        - Foo: foo.md
        """
    )

    assert logs.from_plugin == [
        logs.warning("awesome-nav: 'nav' config from mkdocs.yml is being replaced with one generated by awesome-nav")
    ]


def test_nav_in_sub(mkdocs, logs):
    mkdocs.files(
        """
        docs/
            foo.md
        sub/
            docs/
                bar.md
                .nav.yml
                | nav:
                |   - Title: bar.md
            mkdocs.yml
            | site_name: sub
        """
    )

    mkdocs.build().assert_nav(
        """
        - Foo: foo.md
        - Sub:
            - Title: sub/bar.md
        """
    )

    assert logs.from_plugin == [
        logs.warning("awesome-nav: 'nav' config from mkdocs.yml is being replaced with one generated by awesome-nav")
    ]
